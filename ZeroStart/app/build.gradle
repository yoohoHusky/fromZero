apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion '27.0.3'
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
//        applicationId "com.example.yooho.zerostart"
        applicationId "com.example.yooho.zerostart.develop"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "MineJni"
            ldLibs "log", "z", "m"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }

    }
//    dexOptions {
//        javaMaxHeapSize "4g"
//    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl']
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }
}

final def TARGET_SKIN_DIR = '../skin-package/'
final def SAMPLE_NAME = 'Sample.apk'

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        println("=====================assembleRelease.doLast.begin.=========================")

        def dir = new File(TARGET_SKIN_DIR)
        if (!dir.exists()) {
            dir.mkdirs()
        }

        def f = new File(TARGET_SKIN_DIR + SAMPLE_NAME)
        if (f.exists()) {
            f.delete()
        }

        copy {
            from('build/outputs/apk')
            into(TARGET_SKIN_DIR)
            include '*.apk'
            exclude '**/*-unaligned.apk'
            rename('android-skin-loader-sample-release.apk', SAMPLE_NAME)
        }

        println("=====================assembleRelease.doLast success.=========================")
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleDebug') {
        println("=====================assembleDebug.doLast.begin.=========================")

        def dir = new File(TARGET_SKIN_DIR)
        if (!dir.exists()) {
            dir.mkdirs()
        }

        def f = new File(TARGET_SKIN_DIR + SAMPLE_NAME)
        if (f.exists()) {
            f.delete()
        }

        copy {
            from('build/outputs/apk')
            into(TARGET_SKIN_DIR)
            include '*.apk'
            exclude '**/*-unaligned.apk'
            rename('android-skin-loader-sample-debug.apk', SAMPLE_NAME)
        }

        println("=====================assembleDebug.doLast success.=========================")
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //noinspection GradleCompatible
    implementation 'com.android.support:support-v4:27.1.1'
//    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:appcompat-v7:25.0.0'

    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.mcxiaoke.volley:library:1.0.19'
    implementation project(':mylibrary')

    implementation 'com.github.bumptech.glide:glide:3.7.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:3.7.0'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'io.reactivex:rxjava:1.0.14'
    implementation 'io.reactivex:rxandroid:1.0.1'


    // retrofit
    compile "com.squareup.retrofit2:retrofit:2.1.0"
    compile "com.squareup.retrofit2:converter-gson:2.1.0"
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    api 'com.facebook.fresco:fresco:1.13.0'// 支持 WebP （静态图+动图），需要添加api 'com.facebook.fresco:animated-webp:1.13.0'api 'com.facebook.fresco:webpsupport:1.13.0'
    api 'com.facebook.fresco:animated-webp:1.13.0'

    api 'com.facebook.fresco:webpsupport:1.13.0'
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'com.android.support:palette-v7:23.0.0+'
    implementation 'com.android.support:design:+'
//    compile 'com.bigkoo:convenientbanner:2.0.0'//banner
//    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'

    implementation 'com.github.yhaolpz:FloatWindow:1.0.9'

}